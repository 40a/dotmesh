stages:
    - sync
    - build
    - test
    - deploy

sync_github:
    # push all commits to all branches to github for safe keeping
    stage: sync
    script:
        - git remote add github git@github.com:lukemarsden/datamesh || true
        - git checkout -b $CI_BUILD_REF_NAME || true
        - git push github $CI_BUILD_REF_NAME

before_script:
    - mkdir -p gopath
    - export GOPATH=$(pwd)/gopath
    - cd gopath
    - mkdir -p src/github.com/lukemarsden
    - ln -s `realpath ..` ./src/github.com/lukemarsden/datamesh
    - cd src/github.com/lukemarsden/datamesh

build_client_linux:
    stage: build
    tags:
        - ubuntu-16.10
        - fast
    script:
        - cd cmd/dm/
        - ./rebuild.sh Linux
    artifacts:
        paths:
            - binaries
        expire_in: 1 week

build_client_macos:
    stage: build
    tags:
        - ubuntu-16.10
        - fast
    script:
        - cd cmd/dm/
        - ./rebuild.sh Darwin
    artifacts:
        paths:
            - binaries
        expire_in: 1 week

build_server:
    stage: build
    tags:
        - ubuntu-16.10
        - fast
    script:
        - cd cmd/datamesh-server
        - ./rebuild.sh
    artifacts:
        paths:
            - cmd/datamesh-server/target
        expire_in: 1 week

# run sanity check that things still work on macOS
macos:
    stage: test
    tags:
        - macos
    script:
        - cd cmd/datamesh-server
        # Possible to build just the "prod" image because binaries got passed
        # as artifact in cmd/datamesh-server/target
        - docker build -t datamesh-server . || (sleep 30; docker build -t datamesh-server .)
        - cd ../..
        - ./smoke.sh $(pwd)/binaries/Darwin/dm datamesh-server
        - docker rmi $(docker images | grep "^<none>" | awk '{print $3}') || true
        # XXX need a better answer than this
        #- docker run --rm -i --privileged --pid=host walkerlee/nsenter -t 1 -m -u -i -n reboot || true

# run full dind tests on linux
linux_single_node:
    stage: test
    tags:
        - ubuntu-16.10
        - fast
    script:
        - ./test.sh -run TestSingleNode

linux_two_nodes_same_cluster:
    stage: test
    tags:
        - ubuntu-16.10
        - fast
    script:
        - ./test.sh -run TestTwoNodesSameCluster

linux_two_single_node_clusters:
    stage: test
    tags:
        - ubuntu-16.10
        - fast
    script:
        - ./test.sh -run TestTwoSingleNodeClusters

deploy_client_binaries:
    stage: deploy
    tags:
        - ubuntu-16.10
        - fast
    script:
        - rsync -avz binaries/{Linux,Darwin} luke@neo.lukemarsden.net:/pool/releases/
    only:
        - master

deploy_server_docker_image:
    stage: deploy
    tags:
        - ubuntu-16.10
        - fast
    script:
        - docker login -u $QUAY_USER -p $QUAY_PASSWORD quay.io
        - docker tag $(hostname).local:80/lukemarsden/datamesh-server:pushpull quay.io/lukemarsden/datamesh-server:pushpull
        - docker push quay.io/lukemarsden/datamesh-server:pushpull
    only:
        - master
